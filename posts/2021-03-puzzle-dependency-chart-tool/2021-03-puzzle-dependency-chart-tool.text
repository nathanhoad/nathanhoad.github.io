# A Puzzle Dependency Chart Tool

- published: 2021-03-15 10:00
- tags: gamedev

<section data-type="pull-right">

[![Watch a video about Puzzle Key](youtube.png)](https://youtu.be/WaMolwh2Zys)  
_YouTube: A puzzle dependency chart tool_

</section>

The adventure game I'm building is a mix of action, exploration, and puzzle solving.

The kinds of puzzles that I'm including are loosely based on those found in games by the master of the adventure game, [Ron Gilbert](https://www.grumpygamer.com).

With that in mind I've been following his recommendation of planning out the puzzles in what he calls a [Puzzle Dependency Chart](https://www.grumpygamer.com/puzzle_dependency_charts).

Up until now, I'd being doing that in an ancient diagramming tool called Dia.

There's nothing overly wrong with Dia but it was a bit too fiddly to work with for what I was using it for.

So, as a quick experiment I started making a prototype of [my own puzzle dependency visualiser](https://nathanhoad.itch.io/puzzle-key) using Godot.

And in a few hours over a couple of evenings I had more than just a prototype - I had a very usable puzzle dependency tool.

<section data-type="wide">

![Screenshot of Puzzle Key](screenshot.jpg)  
_The Puzzle Key interface is very simple._

</section>

I've called it [Puzzle Key](https://nathanhoad.itch.io/puzzle-key), mainly because I'm terrible at naming things.

You can [download a copy](https://nathanhoad.itch.io/puzzle-key) from my itch page and there's a link to that in the description of this video.

How it works is pretty simple.

Right click to add a node.

The colours mean whatever you want them to mean. They just help you see the distribution of things when you step back and see the flow as a whole.

Drag out a connector to create another node in either direction.

There's isn't that much too it and that's what I like about it. It's just enough for me to get ideas out of my head and into something I can see.